#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct node
{
	char data;
	struct node *left;
	struct node *right;
};

struct node *newNode(char data)
{
	struct node *temp = (struct node *)malloc(sizeof(struct node));
	temp->data = data;
	temp->left = NULL;
	temp->right = NULL;
	return temp;
}

void inorder(struct node *root)
{
	if(root == NULL)
		return;
	inorder(root->left);
	printf("%c ",root->data);
	inorder(root->right);
}

void preorder(struct node *root)
{
	if(root == NULL)
		return;
	printf("%c ",root->data);
	preorder(root->left);
	preorder(root->right);
}

void postorder(struct node *root)
{
	if(root == NULL)
		return;
	postorder(root->left);
	postorder(root->right);
	printf("%c ",root->data);
}

int main()
{
	struct node *root = newNode('+');
	root->left = newNode('*');
	root->right = newNode('-');
	root->left->left = newNode('5');
	root->left->right = newNode('4');
	root->right->left = newNode('100');
	root->right->right = newNode('20');
	printf("Inorder traversal of the tree is: ");
	inorder(root);
	printf("\nPreorder traversal of the tree is: ");
	preorder(root);
	printf("\nPostorder traversal of the tree is: ");
	postorder(root);
	printf("\n");
	return 0;
}
