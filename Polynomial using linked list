#include<stdio.h>
#include<stdlib.h>

struct node
{
	int coeff;
	int exp;
	struct node *next;
};

struct node *create(struct node *);
struct node *insert(struct node *,int,int);
struct node *multiply(struct node *,struct node *);
void display(struct node *);

int main()
{
	struct node *p1=NULL,*p2=NULL,*p3=NULL;
	int ch;
	do
	{
		printf("\n1.Create polynomial 1\n2.Create polynomial 2\n3.Multiply polynomials\n4.Display polynomial 1\n5.Display polynomial 2\n6.Display resultant polynomial\n7.Exit\nEnter your choice:");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
				p1=create(p1);
				break;
			case 2:
				p2=create(p2);
				break;
			case 3:
				p3=multiply(p1,p2);
				break;
			case 4:
				display(p1);
				break;
			case 5:
				display(p2);
				break;
			case 6:
				display(p3);
				break;
			case 7:
				exit(0);
			default:
				printf("\nInvalid choice");
		}
	}while(ch!=7);
	return 0;
}

struct node *create(struct node *p)
{
	int n,i,c,e;
	printf("\nEnter the number of terms:");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		printf("\nEnter the coefficient:");
		scanf("%d",&c);
		printf("\nEnter the exponent:");
		scanf("%d",&e);
		p=insert(p,c,e);
	}
	return p;
}

struct node *insert(struct node *p,int c,int e)
{
	struct node *temp,*q;
	temp=(struct node *)malloc(sizeof(struct node));
	temp->coeff=c;
	temp->exp=e;
	temp->next=NULL;
	if(p==NULL)
		p=temp;
	else
	{
		q=p;
		while(q->next!=NULL)
			q=q->next;
		q->next=temp;
	}
	return p;
}

struct node *multiply(struct node *p1,struct node *p2)
{
	struct node *p3=NULL,*q1,*q2;
	int c,e;
	q1=p1;
	while(q1!=NULL)
	{
		q2=p2;
		while(q2!=NULL)
		{
			c=q1->coeff*q2->coeff;
			e=q1->exp+q2->exp;
			p3=insert(p3,c,e);
			q2=q2->next;
		}
		q1=q1->next;
	}
	return p3;
}

void display(struct node *p)
{
	struct node *q;
	q=p;
	if(q==NULL)
		printf("\nEmpty polynomial");
	else
	{
		while(q!=NULL)
		{
			printf("%dx^%d+",q->coeff,q->exp);
			q=q->next;
		}
	}
}
